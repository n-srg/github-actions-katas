name: JAVA CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  actions: write
  checks: write
  packages: write
  statuses: write

env: # Set the secret as an input
  docker_username: ${{ github.actor }}
  docker_password: ${{ secrets.GITHUB_TOKEN }}
  GIT_COMMIT: ${{ github.sha }}

jobs:
  Clone-down:
    name: Clone down repo
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
    - uses: actions/checkout@v3
    - name: Upload Repo
      uses: actions/upload-artifact@v3
      with:
        name: code
        path: .
  Build:
    runs-on: ubuntu-latest
    needs: Clone-down
    container: gradle:6-jdk11
    steps:
    - name: Download code
      uses: actions/download-artifact@v3
      with:
        name: code
        path: . 
    - name: Build with Gradle
      run: chmod +x ci/build-app.sh && ci/build-app.sh
    - name: Test with Gradle
      run: chmod +x ci/unit-test-app.sh && ci/unit-test-app.sh
    - name: Upload Repo
      uses: actions/upload-artifact@v3
      with:
        name: code
        path: .
  Docker-image:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Download code
        uses: actions/download-artifact@v3
        with:
          name: code
          path: . 
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: app
          push: true
          tags: ghcr.io/${{ github.actor }}/micronaut-app:1.0-${{ github.sha }},ghcr.io/${{ github.actor }}/micronaut-app:latest

  Component-tests:
    runs-on: ubuntu-latest
    needs: [Docker-image]
    steps:
      - name: Download code
        uses: actions/download-artifact@v3
        with:
          name: code
          path: . 
      - name: Execute component test
        run: chmod +x ci/component-test.sh && GIT_COMMIT="GA-$GITHUB_SHA" && ci/component-test.sh

  Performace-tests:
    runs-on: ubuntu-latest
    needs: [Docker-image]
    steps:
      - name: Download code
        uses: actions/download-artifact@v3
        with:
          name: code
          path: . 
      - name: Execute component test
        run: chmod +x ci/performance-test.sh && GIT_COMMIT="GA-$GITHUB_SHA" && ci/performance-test.sh
        